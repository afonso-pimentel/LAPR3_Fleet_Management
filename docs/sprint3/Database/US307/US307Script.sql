CREATE OR REPLACE PROCEDURE CHECK_WAREHOUSE_STORAGE (WAREHOUSE_ID NUMBER, WAREHOUSE_SPACE OUT NUMBER)
AS
BEGIN
    SELECT
        TRUNC(CARGOSITE.CONTAINERCAPACITY - (Unloaded.NumberOfContainers - Loaded.NumberOfContainers ), CARGOSITE.CONTAINERCAPACITY) AS CURRENTSTORAGE
        INTO WAREHOUSE_SPACE
    FROM CARGOSITE,(
         SELECT NVL(COUNT(CARGOMANIFESTLINE.IDCONTAINER),0)AS NumberOfContainers
        FROM CARGOMANIFESTLINE
        INNER JOIN CARGOMANIFEST ON CARGOMANIFEST.ID = CARGOMANIFESTLINE.IDCARGOMANIFEST
        INNER JOIN CARGOMANIFESTTYPE on CARGOMANIFEST.IDCARGOMANIFESTTYPE = CARGOMANIFESTTYPE.ID
        WHERE CARGOMANIFEST.IDCARGOSITEORIGIN= WAREHOUSE_ID AND CARGOMANIFESTTYPE.DESCRIPTION = 'Load' AND CARGOMANIFEST.DATESTART <= SYSDATE
        ) Loaded, (
        SELECT NVL(COUNT(CARGOMANIFESTLINE.IDCONTAINER),0)AS NumberOfContainers
        FROM CARGOMANIFESTLINE
        INNER JOIN CARGOMANIFEST ON CARGOMANIFEST.ID = CARGOMANIFESTLINE.IDCARGOMANIFEST
        INNER JOIN CARGOMANIFESTTYPE on CARGOMANIFEST.IDCARGOMANIFESTTYPE = CARGOMANIFESTTYPE.ID
        WHERE CARGOMANIFEST.IDCARGOSITEDESTINATION= WAREHOUSE_ID AND CARGOMANIFESTTYPE.DESCRIPTION = 'Unload' AND CARGOMANIFEST.DATEFINISH <= SYSDATE
        ) Unloaded
    WHERE CARGOSITE.ID = WAREHOUSE_ID;
    --DBMS_OUTPUT.PUT_LINE('Warehouse current capacity ='|| WAREHOUSE_SPACE);
END;
CREATE OR REPLACE TRIGGER CHECK_VALID_CARGOMANIFESTLINE_SIZE_FOR_WAREHOUSE
BEFORE INSERT ON CARGOMANIFESTLINE
    FOR EACH ROW
DECLARE
    CURRENT_CAPACITY INT;
    WAREHOUSE_ID CARGOMANIFEST.IDCARGOSITEDESTINATION%TYPE;
    WAREHOUSE_NAME CARGOSITE.NAME%TYPE;
    CARGOMANIFEST_TYPE CARGOMANIFESTTYPE.DESCRIPTION%TYPE;
BEGIN
    SELECT
        CARGOMANIFEST.IDCARGOSITEDESTINATION, CARGOSITE.NAME, CARGOMANIFESTTYPE.DESCRIPTION
        INTO WAREHOUSE_ID, WAREHOUSE_NAME, CARGOMANIFEST_TYPE
    FROM CARGOMANIFEST
    INNER JOIN CARGOSITE ON CARGOMANIFEST.IDCARGOSITEDESTINATION = CARGOSITE.ID
    INNER JOIN CARGOMANIFESTTYPE ON CARGOMANIFEST.IDCARGOMANIFESTTYPE = CARGOMANIFESTTYPE.ID
    WHERE CARGOMANIFEST.ID = :NEW.IDCARGOMANIFEST;
    IF CARGOMANIFEST_TYPE = 'Unload' THEN
        CHECK_WAREHOUSE_STORAGE(WAREHOUSE_ID, CURRENT_CAPACITY);
        IF CURRENT_CAPACITY = 0 THEN
            RAISE_APPLICATION_ERROR(-20307,'Warehouse inventory is full. Cannot insert container in' || WAREHOUSE_NAME);
        END IF;
    END IF;
END;